% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/subscribe.R
\name{topic_subscribe}
\alias{topic_subscribe}
\title{Subscribe to an MQTT Topic}
\usage{
topic_subscribe(host = "test.mosquitto.org", port = 1883L,
  client_id = sprintf("mqtt_r_\%s", uuid::UUIDgenerate()), topic = "#",
  keepalive = 60L, qos = 0L,
  message_callback = mqtt_default_message_callback,
  connection_callback = mqtt_default_connection_callback,
  disconnect_callback = mqtt_default_disconnection_callback)
}
\arguments{
\item{host, port}{host (character) and port (integer) to connect to. Defaults to
"\code{test.mosquitto.org}".}

\item{client_id}{the client id to use. \strong{Max 23 characters}. \strong{Must be unique}.
Defaults to "\code{r_mqtt}" + a random string.}

\item{topic}{topic to subscribe to. Defaults to wildcard "\code{#}"}

\item{keepalive}{the number of seconds after which the broker should send a PING
message to the client if no other messages have been exchanged in that time.
Defaults to \code{60}}

\item{qos}{integer value \code{0}, \code{1} or \code{2} indicating the Quality of Service to be used for
the message.}

\item{message_callback}{your R worker function for messages. See \code{\link[=mqtt_default_connection_callback]{mqtt_default_connection_callback()}}
for more details on how to write your own. That one is the default.}

\item{connection_callback}{you can use the package-provided \code{\link[=mqtt_silent_callback]{mqtt_silent_callback()}}
if you do not want any message printed at startup. It defaults
to using a package-provided \code{\link[=mqtt_default_connection_callback]{mqtt_default_connection_callback()}} which
will use \code{message()} to print out a one-line diagnostic message.}

\item{disconnect_callback}{called when the connection is disconnecting}
}
\description{
See \code{\link[=mqtt_default_connection_callback]{mqtt_default_connection_callback()}} and \code{\link[=mqtt_default_message_callback]{mqtt_default_message_callback()}}
for more information on callbacks
}
\note{
TODO authentication & encryption support
}
\section{Topics}{

A topic is a UTF-8 string used by the broker to filter messages for
subscription. They consist of one or more topic levels. Each level is separated
by a forward slash --- \code{/} --- (a.k.a. the topic level separator). They topic
components can contain spaces.\cr
\cr
Topics can have wildcards. For the moment, you can visit the
\href{http://docs.oasis-open.org/mqtt/mqtt/v3.1.1/os/mqtt-v3.1.1-os.html#_Toc398718106}{official documentation section}
on specifying topics. Similar examples will eventually be in a vignette.
}

